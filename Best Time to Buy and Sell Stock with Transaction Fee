int maxProfit(int* prices, int pricesSize, int fee){
int counter=0;
int buy=-100000;
int sell=0;
int oldbuy=0;
//setting up variables, buy is the most money we can have holding a stock, sell is the most money we can have not holding, the buy is negative so that the algorithm will always try to buy a stock.
while(counter<pricesSize){
oldbuy=buy; //storing the previous buy so we can change it and still use for the next sell value
buy=sell-prices[counter]-fee<buy?buy:sell-prices[counter]-fee; //checking whether it's more profitable to have already bought a stock or to buy it here
sell=oldbuy+prices[counter]>sell?oldbuy+prices[counter]:sell;//checking whether it's more profitable to sell a stock here or to have already sold it.
counter++;
}
//if it's profitable to not buy a stock, that is checked here
if(sell<0){
return 0;
} else
return sell;
}
